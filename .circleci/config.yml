# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  maven: circleci/maven@1.1.0


commands:
  export_cucumber_results:
    parameters:
      report_dir:
        default: target/cucumber-reports
        type: string
    steps:
      - run:
          name: Save test results
          command: |
            mkdir -p ~/cucumber
            cp -R << parameters.report_dir >>/. ~/cucumber
          when: always
      - store_test_results:
          path: ~/cucumber
      - store_artifacts:
          path: ~/cucumber


jobs:
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean compile
  run_cucumber_test:
    parameters:
      app_src_directory:
        default: ''
        description: >-
          Useful when the source of your maven project is not in the root directory
          of your git repo. Supply the name of the directory or relative path of the
          directory containing your source code.
        type: string
      command:
        default: verify
        description: The maven command to run.
        type: string
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - maven/with_cache:
          steps:
            - run:
                command: mvn << parameters.command >> "$@"
                name: Run Tests
                working_directory: << parameters.app_src_directory >>
      - export_cucumber_results:
          report_dir: acceptance/target/cucumber-reports

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build:
    jobs:
      - build-and-test:
          name: CircleCI - Build commit on push
          filters:
            branches:
              only:
                - feature/ci-cd-integrations_demo
  run-system-integration-tests:
    jobs:
      - maven/test:
          name: CircleCI - Run System Integration tests on PR
          command: clean compile verify -P system-integration
          test_results_path: system-integration/target/failsafe-reports
  nightly-regression:
    triggers:
      - schedule:
          cron: "35 0 * * *"
          filters:
            branches:
              only:
                - feature/ci-cd-integrations_dem
    jobs:
      - build-and-test
      - run_cucumber_test:
          name: CircleCI - Run Nightly Regression
          command: verify -P acceptance-test
          requires:
            - build-and-test